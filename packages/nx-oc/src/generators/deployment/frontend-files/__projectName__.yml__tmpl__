apiVersion: v1
type: Template
metadata:
  name: <%= projectName %>
labels:
  app: <%= projectName %>
parameters:
  - name: APP_NAME
    description: Name of the application.
    displayName: Application Name
    value: <%= projectName %>
    required: true
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: ${APP_NAME}
  - apiVersion: v1
    type: BuildConfig
    metadata:
      name: ${APP_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
    runPolicy: Serial
    source:
        binary: {}
        type: Binary
    strategy:
      dockerStrategy:
        buildArgs:
          - name: PROJECT
            value: <%= projectName %>
        dockerfilePath: .openshift/<%= projectName %>/Dockerfile
      type: Docker
    triggers:
      - type: ConfigChange
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: ${APP_NAME}
    data:
      TENANT_REALM: <%= tenantRealm %>
      ACCESS_SERVICE_URL: <%= accessServiceUrl %>
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${APP_NAME}
    spec:
      replicas: 1
      selector:
        name: ${APP_NAME}
      strategy:
        activeDeadlineSeconds: 21600
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        type: Recreate
      template:
        metadata:
          labels:
            name: ${APP_NAME}
        spec:
          containers:
            - name: ${APP_NAME}
              envFrom:
                - configMapRef:
                    name: ${APP_NAME}
              env:
                - name: port
                  value: '3333'
                - name: LOG_LEVEL
                  value: info
              imagePullPolicy: IfNotPresent
              ports:
                - containerPort: 3333
                  name: http
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
      triggers:
        - imageChangeParams:
            containerNames:
              - ${APP_NAME}
            from:
              kind: ImageStreamTag
              name: ${APP_NAME}:latest
          type: ImageChange
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${APP_NAME}
    spec:
      ports:
        - name: http
          port: 3333
          protocol: TCP
          targetPort: 3333
      selector:
        name: ${APP_NAME}
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Route
    metadata:
      name: ${APP_NAME}
    spec:
      port:
        targetPort: http
      tls:
        termination: edge
      to:
        kind: Service
        name: ${APP_NAME}
        weight: 100
      wildcardPolicy: None
