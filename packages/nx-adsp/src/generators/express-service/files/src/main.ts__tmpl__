/**
 * This is not a production server yet!
 * This is only a minimal backend to get started.
 */
import { AdspId, initializeService } from '@abgov/adsp-service-sdk';
import * as express from 'express';
import * as passport from 'passport';
import { Strategy as AnonymousStrategy } from 'passport-anonymous';

import { environment } from './environments/environment';

async function initializeApp(): Promise<express.Application> {
  const app = express();
  app.use(passport.initialize());

  const serviceId = AdspId.parse(environment.CLIENT_ID);
  const { tenantStrategy } = await initializeService(
    {
      displayName: '<%= projectName %>',
      description: 'Put your service description here.',
      realm: environment.TENANT_REALM,
      serviceId,
      clientSecret: environment.CLIENT_SECRET,
      accessServiceUrl: new URL(environment.ACCESS_SERVICE_URL),
      directoryUrl: new URL(environment.DIRECTORY_SERVICE_URL),
    },
    { logLevel: environment.LOG_LEVEL }
  );

  passport.use('tenant', tenantStrategy);
  passport.use('anonymous', new AnonymousStrategy());

  app.use(passport.authenticate(['tenant', 'anonymous'], { session: false }));

  app.get('/<%= projectName %>/v1/public', (_req, res) => {
    res.send({ message: `Welcome to public API resource!` });
  });

  app.get(
    '/<%= projectName %>/v1/private',
    (req, res, next) => {
      if (!req.user) {
        res.sendStatus(401);
      } else {
        next();
      }
    },
    (req, res) => {
      const user = req.user;
      res.send({ message: `Welcome to private API resource! ${user.name}` });
    }
  );
  return app;
}

initializeApp().then((app) => {
  const port = environment.port || 3333;

  const server = app.listen(port, () => {
    console.log(`Listening at http://localhost:${port}/<%= projectName %>/v1`);
  });
  server.on('error', console.error);
});
