import { configureStore } from '@reduxjs/toolkit';
import {
  reducer as oidcReducer,
  LOAD_USER_ERROR,
  LOADING_USER,
  USER_EXPIRED,
  USER_EXPIRING,
  USER_FOUND,
  USER_LOADED,
  USER_SIGNED_OUT,
} from 'redux-oidc';
import { CONFIG_FEATURE_KEY, configReducer } from './app/config.slice';
import { START_FEATURE_KEY, startReducer } from './app/start.slice';
import { INTAKE_FEATURE_KEY, intakeReducer } from './app/intake.slice';

export const store = configureStore({
  reducer: {
    user: oidcReducer,
    [CONFIG_FEATURE_KEY]: configReducer,
    [START_FEATURE_KEY]: startReducer,
    [INTAKE_FEATURE_KEY]: intakeReducer,
  },
  devTools: process.env.NODE_ENV !== 'production',
  // Optional Redux store enhancers
  enhancers: [],
  middleware: (getDefault) =>
    getDefault({
      serializableCheck: {
        ignoredActions: [
          LOAD_USER_ERROR,
          LOADING_USER,
          USER_EXPIRED,
          USER_EXPIRING,
          USER_FOUND,
          USER_LOADED,
          USER_SIGNED_OUT,
        ],
        ignoredPaths: ['user'],
      },
    }),
});
export type AppDispatch = typeof store.dispatch;
